
1. https://corsproxy.io/

Your code has a few issues that prevent it from updating the JSON file in your GitHub repository. The GitHub API does support updating files with vanilla JavaScript using the fetch API, so you don’t need Octokit.js. Below, I’ll explain the problems and provide a working solution. Incorrect Endpoint: The URL is incorrect. The GitHub API uses /repos/{owner}/{repo}/contents/{path} for file operations.

Authentication: Using client_id and access_token as query parameters isn’t the standard way for write operations. Instead, use a personal access token in the Authorization header.

Method: Updating a file requires a PUT request, not POST.

Body Format: The content must be Base64-encoded, and you need the file’s SHA to avoid conflicts. The body should include a commit message, content, and SHA.

CORS: Running this in a browser may cause CORS issues, as GitHub’s API restricts client-side requests.

Solution Here’s a vanilla JavaScript solution to update a JSON file in your public repository. It first fetches the file’s SHA (if it exists) and then sends a PUT request to update the file. For browser compatibility, you’ll need a proxy server to handle CORS, or you can run this in a Node.js environment.

// Replace with your details
const owner = "myGithubUsername";
const repo = "myRepository";
const path = "myfile.json";
const token = "ghp_yourPersonalAccessToken"; // Use a personal access token with 'repo' scope

// New JSON content
const newContent = {
  title: "Updated Book",
  author: "John Doe",
  price: 29.99
};

// Function to get the file's SHA
async function getFileSha() {
  try {
    const response = await fetch(
      `https://api.github.com/repos/${owner}/${repo}/contents/${path}`,
      {
        method: "GET",
        headers: {
          "Authorization": `token ${token}`,
          "Accept": "application/vnd.github.v3+json",
          "Content-Type": "application/json"
        }
      }
    );
    if (!response.ok) {
      if (response.status === 404) return null; // File doesn't exist
      throw new Error(`Failed to fetch SHA: ${response.statusText}`);
    }
    const data = await response.json();
    return data.sha;
  } catch (error) {
    console.error("Error fetching SHA:", error);
    return null;
  }
}

// Function to update the JSON file
async function updateJsonFile() {
  try {
    const sha = await getFileSha();
    const contentBase64 = btoa(JSON.stringify(newContent, null, 2));

    const body = {
      message: "Update myfile.json via API",
      content: contentBase64,
      sha: sha // Omit if creating a new file
    };

    const response = await fetch(
      `https://api.github.com/repos/${owner}/${repo}/contents/${path}`,
      {
        method: "PUT",
        headers: {
          "Authorization": `token ${token}`,
          "Accept": "application/vnd.github.v3+json",
          "Content-Type": "application/json"
        },
        body: JSON.stringify(body)
      }
    );

    if (!response.ok) {
      const errorData = await response.json();
      throw new Error(`Failed to update file: ${errorData.message}`);
    }

    const result = await response.json();
    console.log("File updated! Commit URL:", result.commit.html_url);
  } catch (error) {
    console.error("Error updating file:", error);
  }
}

updateJsonFile();












..............................................
https://api.github.com/repos/myGithubUsername/myRepository/myfile.json?client_id=fhh9Nk3dffg0yJklLhs&access_token=ah5hnkssd70ee9bkldsd50hhto8gfy67







https://stackoverflow.com/questions/43046097/post-request-to-github-api

https://stackoverflow.com/questions/71054940/update-github-files-through-the-rest-api


https://www.jsdelivr.com/tools/purge

